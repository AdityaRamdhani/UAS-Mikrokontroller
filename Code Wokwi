#include <WiFi.h>
#include <HTTPClient.h>
#include <LiquidCrystal_I2C.h>

// Wifi & ThingSpeak
const char* ssid     = "Wokwi-GUEST";
const char* password = "";
const String apiKey  = "TPNGZLDP5LUWIHX3";
const String server  = "http://api.thingspeak.com/update";

// Pin definisi
#define SOIL_PIN     34
#define RED_PIN      4
#define YELLOW_PIN   2
#define GREEN_PIN    15
#define BUZZER_PIN   5

LiquidCrystal_I2C lcd(0x27,16,2);

void setup() {
  Serial.begin(115200);

  pinMode(RED_PIN, OUTPUT);
  pinMode(YELLOW_PIN, OUTPUT);
  pinMode(GREEN_PIN, OUTPUT);
  pinMode(BUZZER_PIN, OUTPUT);

  lcd.init();
  lcd.backlight();          
  lcd.setCursor(0,0);
  lcd.print("Smart Plant");
  delay(1000);

  WiFi.begin(ssid, password);
  lcd.clear();
  lcd.print("Connecting...");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }
  lcd.clear();
  lcd.print("WiFi Connected");
  delay(1000);
  lcd.clear();
}

void loop() {
  int moisture = analogRead(SOIL_PIN);
  Serial.println(moisture);

  lcd.setCursor(0,0);
  lcd.print("Moist: ");
  lcd.print(moisture);
  lcd.print("   ");

  if (moisture < 600) {
    digitalWrite(RED_PIN, HIGH);
    digitalWrite(YELLOW_PIN, LOW);
    digitalWrite(GREEN_PIN, LOW);
    tone(BUZZER_PIN, 1000);
    lcd.setCursor(0,1);
    lcd.print("Tanaman Layu");

  } else if (moisture < 3000) {
    digitalWrite(RED_PIN, LOW);
    digitalWrite(YELLOW_PIN, HIGH);
    digitalWrite(GREEN_PIN, LOW);
    noTone(BUZZER_PIN);
    lcd.setCursor(0,1);
    lcd.print("Tanaman Kurang Air");

  } else {
    digitalWrite(RED_PIN, LOW);
    digitalWrite(YELLOW_PIN, LOW);
    digitalWrite(GREEN_PIN, HIGH);
    noTone(BUZZER_PIN);
    lcd.setCursor(0,1);
    lcd.print("Tanaman Sehat");
  }

  // Kirim ke ThingSpeak
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    String url = server + "?api_key=" + apiKey + "&field1=" + String(moisture);
    http.begin(url);
    http.GET();
    http.end();
  }

  delay(15000);
}
